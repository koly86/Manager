unit Un_Find;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ShrFunc;

type
  Tfm_Find = class(TForm)
    Label1: TLabel;
    Label5: TLabel;
    Label7: TLabel;
    Label3: TLabel;
    ed1: TEdit;
    ed3: TEdit;
    ed4: TEdit;
    ed2: TEdit;
    procedure ed1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ed2KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ed3KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ed4KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
  private
    { Private declarations }
  public
    kf: word;
    { Public declarations }
  end;

var
  fm_Find: Tfm_Find;

implementation
uses unMain, unIS, unCliOrds, IBQuery, DB;
{$R *.dfm}

procedure Tfm_Find.ed1KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  C_ID: integer;
begin
  if ed1.Text = '' then
    exit;
  try
    C_ID := StrToInt(ed1.Text);
  except
    MsgError('Неправильно задан образец поиска', 'Проверка');
  end;
  if Key = 13 then
    case kf of
      // Поиск в текущих
      1: with dmIS.qIN, dmIS.qIN.SQL do
        begin
          Close;
          Clear;
          Add('SELECT ID_PROJECT, ID_AGENT FROM PROJECTS ');
          Add('WHERE ID_PROJECT = :pr1 AND D_CLOSE IS NULL');
          ParamByName('pr1').AsInteger := C_ID;
          Open;
          if not IsEmpty then
          begin
            //    fmCliOrds.qClients.Locate('ID_ITEM', FieldByName('ID_AGENT').AsInteger,[]);
            f_CliOrds[fmMain.NF_CliOrds].qClients.Locate('ID_ITEM',
              FieldByName('ID_AGENT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].qPrj.Locate('ID_PROJECT', C_ID, []);
          end;
        end;

      // Поиск в архиве

    end;

end;

procedure Tfm_Find.ed2KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  C_ID: integer;
begin
  if ed2.Text = '' then
    exit;
  Screen.Cursor := crHourGlass;
  try
    C_ID := StrToInt(ed2.Text);
  except
    MsgError('Неправильно задан образец поиска', 'Проверка');
  end;
  if Key = 13 then
    case kf of
      // Поиск в текущих
      1: with dmIS.qIN, dmIS.qIN.SQL do
        begin
          Close;
          Clear;
          Add('SELECT D.ID_PROJECT_DOC, P.ID_PROJECT, P.ID_AGENT');
          Add('FROM PROJECTS P join PROJECT_DOCS D on D.ID_PROJECT = P.ID_PROJECT');
          Add('and D.ID_PROJECT_DOC = :d1 WHERE P.D_CLOSE IS NULL');
          ParamByName('d1').AsInteger := C_ID;
          Open;
          if not IsEmpty then
          begin
            f_CliOrds[fmMain.NF_CliOrds].qClients.Locate('ID_ITEM',
              FieldByName('ID_AGENT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].qPrj.Locate('ID_PROJECT',
              FieldByName('ID_PROJECT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].C_Pr := dmIS.qPrjID_PROJECT.AsInteger;
            if not dmIS.dbDOC.Connected then
              dmIS.dbDOC.Connected := True;
            dmIS.qDOC.Locate('ID_PROJECT_DOC', C_ID, []);
          end;
        end;

      // Поиск в архиве

    end;
  Screen.Cursor := crDefault;

end;

procedure Tfm_Find.ed3KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  C_ID: integer;
  afscr, afscr_prj: TDataSetNotifyEvent;
begin

  afscr := f_CliOrds[fmMain.NF_CliOrds].qOrders.AfterScroll;
  afscr_prj := f_CliOrds[fmMain.NF_CliOrds].qPrj.AfterScroll;

  f_CliOrds[fmMain.NF_CliOrds].qOrders.AfterScroll := nil;
  f_CliOrds[fmMain.NF_CliOrds].qPrj.AfterScroll := nil;
  if ed3.Text = '' then
    exit;
  Screen.Cursor := crHourGlass;
  try
    C_ID := StrToInt(ed3.Text);
  except
    MsgError('Неправильно задан образец поиска', 'Проверка');
  end;
  if Key = 13 then
    case kf of
      // Поиск в текущих
      1: with dmIS.qIN, dmIS.qIN.SQL do
        begin
          Close;
          Clear;
          Add('SELECT O.ID_ORDER, P.ID_PROJECT, P.ID_AGENT');
          Add('FROM PROJECTS P join PROJECT_ORDS O on O.ID_PROJECT = P.ID_PROJECT');
          Add('and O.ID_ORDER = :ord1 WHERE P.D_CLOSE IS NULL');
          ParamByName('ord1').AsInteger := C_ID;
          Open;
          if not IsEmpty then
          begin

            f_CliOrds[fmMain.NF_CliOrds].qClients.Locate('ID_ITEM',
              FieldByName('ID_AGENT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].qPrj.Locate('ID_PROJECT',
              FieldByName('ID_PROJECT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].C_PR :=
              f_CliOrds[fmMain.NF_CliOrds].qPrjID_PROJECT.AsInteger;
            //  If not dmIS.dbDOC.Connected Then dmIS.dbDOC.Connected := True;
            f_CliOrds[fmMain.NF_CliOrds].C_ORD := C_ID;
            f_CliOrds[fmMain.NF_CliOrds].dtpIn.Clear;
            f_CliOrds[fmMain.NF_CliOrds].cbAll.Checked := true;
            f_CliOrds[fmMain.NF_CliOrds].OpenOrds;
            f_CliOrds[fmMain.NF_CliOrds].qOrders.Locate('ID_ORDER', C_ID, []);

            f_CliOrds[fmMain.NF_CliOrds].qOrders.AfterScroll := afscr;
            f_CliOrds[fmMain.NF_CliOrds].qPrj.Locate('ID_PROJECT',
              f_CliOrds[fmMain.NF_CliOrds].qOrdersID_PROJECT.AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].qPrj.AfterScroll := afscr_prj;
          end;
        end;
      // Поиск в архиве
    end;
  Screen.Cursor := crDefault;

end;

procedure Tfm_Find.ed4KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if ed4.Text = '' then
    exit;
  Screen.Cursor := crHourGlass;
  if Key = 13 then
    case kf of
      // Поиск в текущих
      1: with dmIS.qIN, dmIS.qIN.SQL do
        begin
          Close;
          Clear;
          Add('SELECT O.ID_ORDER, P.ID_PROJECT, P.ID_AGENT');
          Add('FROM PROJECTS P join PROJECT_ORDS O on O.ID_PROJECT = P.ID_PROJECT');
          //   Add('and UPPER(O.N_ORDER) like UPPER(''''%'''+':ord1) WHERE P.D_CLOSE IS NULL');
          Add('and UPPER(O.N_ORDER) like UPPER(' + '''%' + ed4.Text +
            ''') WHERE P.D_CLOSE IS NULL');
          //   ParamByName('ord1').AsString := ed4.Text;
          Open;
          if not IsEmpty then
          begin

            f_CliOrds[fmMain.NF_CliOrds].qClients.Locate('ID_ITEM',
              FieldByName('ID_AGENT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].qPrj.Locate('ID_PROJECT',
              FieldByName('ID_PROJECT').AsInteger, []);
            f_CliOrds[fmMain.NF_CliOrds].C_PR := dmIS.qPrjID_PROJECT.AsInteger;
            //  If not dmIS.dbDOC.Connected Then dmIS.dbDOC.Connected := True;
            f_CliOrds[fmMain.NF_CliOrds].dtpIn.Value := null;
            f_CliOrds[fmMain.NF_CliOrds].cbAll.Checked := true;
            f_CliOrds[fmMain.NF_CliOrds].OpenOrds;
            f_CliOrds[fmMain.NF_CliOrds].qOrders.Locate('ID_ORDER',
              FieldByName('ID_ORDER').AsInteger, []);
          end;
        end;

      // Поиск в архиве

    end;
  Screen.Cursor := crDefault;

end;

end.

